\BOOKMARK [1][-]{section.1}{项目背景}{}% 1
\BOOKMARK [1][-]{section.2}{立项依据}{}% 2
\BOOKMARK [2][-]{subsection.2.1}{C语言安全性问题与Rust的可靠性}{section.2}% 3
\BOOKMARK [2][-]{subsection.2.2}{Rust并发模型}{section.2}% 4
\BOOKMARK [2][-]{subsection.2.3}{Rust的高效性}{section.2}% 5
\BOOKMARK [2][-]{subsection.2.4}{RTOS现今的需求}{section.2}% 6
\BOOKMARK [3][-]{subsubsection.2.4.1}{资源管理需求}{subsection.2.4}% 7
\BOOKMARK [3][-]{subsubsection.2.4.2}{安全性需求}{subsection.2.4}% 8
\BOOKMARK [1][-]{section.3}{前瞻性报告}{}% 9
\BOOKMARK [2][-]{subsection.3.1}{嵌入式操作系统}{section.3}% 10
\BOOKMARK [3][-]{subsubsection.3.1.1}{嵌入式系统简述}{subsection.3.1}% 11
\BOOKMARK [3][-]{subsubsection.3.1.2}{嵌入式系统特点}{subsection.3.1}% 12
\BOOKMARK [3][-]{subsubsection.3.1.3}{嵌入式系统的发展趋势}{subsection.3.1}% 13
\BOOKMARK [3][-]{subsubsection.3.1.4}{嵌入式系统的脆弱性}{subsection.3.1}% 14
\BOOKMARK [3][-]{subsubsection.3.1.5}{嵌入式系统面临的\(软件\)安全问题}{subsection.3.1}% 15
\BOOKMARK [3][-]{subsubsection.3.1.6}{嵌入式系统安全对策\(软件\)}{subsection.3.1}% 16
\BOOKMARK [2][-]{subsection.3.2}{用Rust编写嵌入式操作系统的优势}{section.3}% 17
\BOOKMARK [1][-]{section.4}{相关工作}{}% 18
\BOOKMARK [2][-]{subsection.4.1}{学术界相关工作调研}{section.4}% 19
\BOOKMARK [2][-]{subsection.4.2}{工业界相关工作调研}{section.4}% 20
\BOOKMARK [3][-]{subsubsection.4.2.1}{Rust in Optimization——npm堆栈管理}{subsection.4.2}% 21
\BOOKMARK [3][-]{subsubsection.4.2.2}{Rust in Analysis——Skylight代理的优化}{subsection.4.2}% 22
\BOOKMARK [3][-]{subsubsection.4.2.3}{Rust in Entertainment——大型游戏安全流畅的并发性}{subsection.4.2}% 23
\BOOKMARK [1][-]{section.5}{Rust调研}{}% 24
\BOOKMARK [2][-]{subsection.5.1}{越来越多的用户体会到Rust语言的高效性}{section.5}% 25
\BOOKMARK [2][-]{subsection.5.2}{Rust使用规模增大}{section.5}% 26
\BOOKMARK [2][-]{subsection.5.3}{使用Rust的目标平台趋于多样化}{section.5}% 27
\BOOKMARK [2][-]{subsection.5.4}{人们对Rust语言的兴趣与日俱增}{section.5}% 28
\BOOKMARK [3][-]{subsubsection.5.4.1}{目前已使用Rust开发的项目}{subsection.5.4}% 29
\BOOKMARK [3][-]{subsubsection.5.4.2}{Rust目前的挑战}{subsection.5.4}% 30
\BOOKMARK [3][-]{subsubsection.5.4.3}{Rust用于嵌入式设备开发的优势}{subsection.5.4}% 31
\BOOKMARK [1][-]{section.6}{FreeRTOS调研}{}% 32
\BOOKMARK [2][-]{subsection.6.1}{FreeRTOS v10.2.0 task.c 中任务创建API}{section.6}% 33
\BOOKMARK [3][-]{subsubsection.6.1.1}{xTaskCreate}{subsection.6.1}% 34
\BOOKMARK [3][-]{subsubsection.6.1.2}{xTaskCreateStatic}{subsection.6.1}% 35
\BOOKMARK [3][-]{subsubsection.6.1.3}{xTaskCreateRestricted}{subsection.6.1}% 36
\BOOKMARK [3][-]{subsubsection.6.1.4}{xTaskCreateRestrictedStatic}{subsection.6.1}% 37
\BOOKMARK [3][-]{subsubsection.6.1.5}{vTaskAllocateMPURegions}{subsection.6.1}% 38
\BOOKMARK [3][-]{subsubsection.6.1.6}{vTaskDelete}{subsection.6.1}% 39
\BOOKMARK [2][-]{subsection.6.2}{FreeRTOS v10.2.0 task.c 中任务控制API}{section.6}% 40
\BOOKMARK [3][-]{subsubsection.6.2.1}{vTaskDelay}{subsection.6.2}% 41
\BOOKMARK [3][-]{subsubsection.6.2.2}{vTaskDelayUntil}{subsection.6.2}% 42
\BOOKMARK [3][-]{subsubsection.6.2.3}{xTaskAbortDelay}{subsection.6.2}% 43
\BOOKMARK [3][-]{subsubsection.6.2.4}{uxTaskPriorityGet}{subsection.6.2}% 44
\BOOKMARK [3][-]{subsubsection.6.2.5}{eTaskGetState}{subsection.6.2}% 45
\BOOKMARK [3][-]{subsubsection.6.2.6}{vTaskGetInfo}{subsection.6.2}% 46
\BOOKMARK [3][-]{subsubsection.6.2.7}{vTaskPrioritySet}{subsection.6.2}% 47
\BOOKMARK [3][-]{subsubsection.6.2.8}{vTaskSuspend}{subsection.6.2}% 48
\BOOKMARK [3][-]{subsubsection.6.2.9}{vTaskResume}{subsection.6.2}% 49
\BOOKMARK [2][-]{subsection.6.3}{FreeRTOS v10.2.0 task.c 中程序调度API}{section.6}% 50
\BOOKMARK [3][-]{subsubsection.6.3.1}{vTaskStartScheduler}{subsection.6.3}% 51
\BOOKMARK [3][-]{subsubsection.6.3.2}{vTaskEndScheduler}{subsection.6.3}% 52
\BOOKMARK [3][-]{subsubsection.6.3.3}{vTaskSuspendAll}{subsection.6.3}% 53
\BOOKMARK [3][-]{subsubsection.6.3.4}{xTaskResumeAll}{subsection.6.3}% 54
\BOOKMARK [3][-]{subsubsection.6.3.5}{xTaskGetTickCount}{subsection.6.3}% 55
\BOOKMARK [3][-]{subsubsection.6.3.6}{uxTaskGetNumberOfTasks}{subsection.6.3}% 56
\BOOKMARK [3][-]{subsubsection.6.3.7}{pcTaskGetName}{subsection.6.3}% 57
\BOOKMARK [3][-]{subsubsection.6.3.8}{xTaskGetHandle}{subsection.6.3}% 58
\BOOKMARK [3][-]{subsubsection.6.3.9}{uxTaskGetStackHighWaterMark}{subsection.6.3}% 59
\BOOKMARK [3][-]{subsubsection.6.3.10}{xTaskCallApplicationTaskHook}{subsection.6.3}% 60
\BOOKMARK [3][-]{subsubsection.6.3.11}{xTaskGetIdleTaskHandle}{subsection.6.3}% 61
\BOOKMARK [3][-]{subsubsection.6.3.12}{xTaskGetIdleRunTimeCounter}{subsection.6.3}% 62
\BOOKMARK [3][-]{subsubsection.6.3.13}{xTaskNotify}{subsection.6.3}% 63
\BOOKMARK [3][-]{subsubsection.6.3.14}{xTaskNotifyWait}{subsection.6.3}% 64
\BOOKMARK [2][-]{subsection.6.4}{queue.c文件中的重要函数}{section.6}% 65
\BOOKMARK [3][-]{subsubsection.6.4.1}{xQueueCreate}{subsection.6.4}% 66
\BOOKMARK [3][-]{subsubsection.6.4.2}{xQueueCreateStatic}{subsection.6.4}% 67
\BOOKMARK [3][-]{subsubsection.6.4.3}{xQueueSendToToFront}{subsection.6.4}% 68
\BOOKMARK [3][-]{subsubsection.6.4.4}{xQueueSendToBack}{subsection.6.4}% 69
\BOOKMARK [3][-]{subsubsection.6.4.5}{xQueueSend}{subsection.6.4}% 70
\BOOKMARK [3][-]{subsubsection.6.4.6}{xQueueOverwrite}{subsection.6.4}% 71
\BOOKMARK [3][-]{subsubsection.6.4.7}{xQueueGenericSend}{subsection.6.4}% 72
\BOOKMARK [3][-]{subsubsection.6.4.8}{xQueuePeek}{subsection.6.4}% 73
\BOOKMARK [3][-]{subsubsection.6.4.9}{xQueueReceive}{subsection.6.4}% 74
\BOOKMARK [3][-]{subsubsection.6.4.10}{uxQueueMessagesWaiting}{subsection.6.4}% 75
\BOOKMARK [3][-]{subsubsection.6.4.11}{uxQueueSpacesAvailable}{subsection.6.4}% 76
\BOOKMARK [3][-]{subsubsection.6.4.12}{vQueueDelete}{subsection.6.4}% 77
\BOOKMARK [2][-]{subsection.6.5}{list.c 中的主要函数}{section.6}% 78
\BOOKMARK [3][-]{subsubsection.6.5.1}{vListInitialise}{subsection.6.5}% 79
\BOOKMARK [3][-]{subsubsection.6.5.2}{vListInitialiseItem}{subsection.6.5}% 80
\BOOKMARK [3][-]{subsubsection.6.5.3}{vListInsert}{subsection.6.5}% 81
\BOOKMARK [3][-]{subsubsection.6.5.4}{vListInsertEnd}{subsection.6.5}% 82
\BOOKMARK [3][-]{subsubsection.6.5.5}{uxListRemove}{subsection.6.5}% 83
\BOOKMARK [1][-]{section.7}{参考文献}{}% 84
