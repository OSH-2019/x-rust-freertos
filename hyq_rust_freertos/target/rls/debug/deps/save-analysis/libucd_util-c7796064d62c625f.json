{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.1","compilation":{"directory":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,99,100,45,117,116,105,108,45,48,46,49,46,51],"program":"/home/chivier_humber/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","ucd_util","/home/chivier_humber/.cargo/registry/src/github.com-1ecc6299db9ec823/ucd-util-0.1.3/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,link","-C","debuginfo=2","-C","metadata=c7796064d62c625f","-C","extra-filename=-c7796064d62c625f","--out-dir","/home/chivier_humber/Documents/rust_freertos/target/rls/debug/deps","-L","dependency=/home/chivier_humber/Documents/rust_freertos/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/chivier_humber/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,68,111,99,117,109,101,110,116,115,47,114,117,115,116,95,102,114,101,101,114,116,111,115,47,116,97,114,103,101,116,47,114,108,115,47,100,101,98,117,103,47,100,101,112,115,47,108,105,98,117,99,100,95,117,116,105,108,45,99,55,55,57,54,48,54,52,100,54,50,99,54,50,53,102,46,114,108,105,98]},"prelude":{"crate_id":{"name":"ucd_util","disambiguator":[7301187628148880591,16532372926272107221]},"crate_root":"/home/chivier_humber/.cargo/registry/src/github.com-1ecc6299db9ec823/ucd-util-0.1.3/src","external_crates":[{"file_name":"/home/chivier_humber/.cargo/registry/src/github.com-1ecc6299db9ec823/ucd-util-0.1.3/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[853209657226342047,8462664850197014382]}},{"file_name":"/home/chivier_humber/.cargo/registry/src/github.com-1ecc6299db9ec823/ucd-util-0.1.3/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[772178867720458397,10513760593670507587]}},{"file_name":"/home/chivier_humber/.cargo/registry/src/github.com-1ecc6299db9ec823/ucd-util-0.1.3/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17633954781163668134,3962627684191718065]}},{"file_name":"/home/chivier_humber/.cargo/registry/src/github.com-1ecc6299db9ec823/ucd-util-0.1.3/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7858001605524721373,8369385247697161108]}},{"file_name":"/home/chivier_humber/.cargo/registry/src/github.com-1ecc6299db9ec823/ucd-util-0.1.3/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5226771781757675641,11183407964508506038]}},{"file_name":"/home/chivier_humber/.cargo/registry/src/github.com-1ecc6299db9ec823/ucd-util-0.1.3/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[15950205559580256541,6605390554280573401]}},{"file_name":"/home/chivier_humber/.cargo/registry/src/github.com-1ecc6299db9ec823/ucd-util-0.1.3/src/lib.rs","num":7,"id":{"name":"rustc_demangle","disambiguator":[5066653915378193616,7813142097187859454]}},{"file_name":"/home/chivier_humber/.cargo/registry/src/github.com-1ecc6299db9ec823/ucd-util-0.1.3/src/lib.rs","num":8,"id":{"name":"unwind","disambiguator":[1328488228804362593,9042026925657904388]}},{"file_name":"/home/chivier_humber/.cargo/registry/src/github.com-1ecc6299db9ec823/ucd-util-0.1.3/src/lib.rs","num":9,"id":{"name":"backtrace_sys","disambiguator":[3005442698276396085,7194037300925619286]}},{"file_name":"/home/chivier_humber/.cargo/registry/src/github.com-1ecc6299db9ec823/ucd-util-0.1.3/src/lib.rs","num":10,"id":{"name":"panic_unwind","disambiguator":[11662190156692096384,12505544175813687064]}}],"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,99,100,45,117,116,105,108,45,48,46,49,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":971,"line_start":1,"line_end":28,"column_start":1,"column_end":3}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":10},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,99,100,45,117,116,105,108,45,48,46,49,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":625,"byte_end":646,"line_start":21,"line_end":21,"column_start":5,"column_end":26},"alias_span":null,"name":"RANGE_HANGUL_SYLLABLE","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":24},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,99,100,45,117,116,105,108,45,48,46,49,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":648,"byte_end":659,"line_start":21,"line_end":21,"column_start":28,"column_end":39},"alias_span":null,"name":"hangul_name","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":26},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,99,100,45,117,116,105,108,45,48,46,49,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":661,"byte_end":696,"line_start":21,"line_end":21,"column_start":41,"column_end":76},"alias_span":null,"name":"hangul_full_canonical_decomposition","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":32},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,99,100,45,117,116,105,108,45,48,46,49,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":721,"byte_end":736,"line_start":23,"line_end":23,"column_start":21,"column_end":36},"alias_span":null,"name":"RANGE_IDEOGRAPH","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":34},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,99,100,45,117,116,105,108,45,48,46,49,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":738,"byte_end":752,"line_start":23,"line_end":23,"column_start":38,"column_end":52},"alias_span":null,"name":"ideograph_name","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":38},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,99,100,45,117,116,105,108,45,48,46,49,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":770,"byte_end":794,"line_start":24,"line_end":24,"column_start":16,"column_end":40},"alias_span":null,"name":"character_name_normalize","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":42},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,99,100,45,117,116,105,108,45,48,46,49,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":796,"byte_end":819,"line_start":24,"line_end":24,"column_start":42,"column_end":65},"alias_span":null,"name":"symbolic_name_normalize","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":48},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,99,100,45,117,116,105,108,45,48,46,49,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":846,"byte_end":859,"line_start":26,"line_end":26,"column_start":5,"column_end":18},"alias_span":null,"name":"PropertyTable","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":52},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,99,100,45,117,116,105,108,45,48,46,49,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":861,"byte_end":879,"line_start":26,"line_end":26,"column_start":20,"column_end":38},"alias_span":null,"name":"PropertyValueTable","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":54},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,99,100,45,117,116,105,108,45,48,46,49,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":881,"byte_end":895,"line_start":26,"line_end":26,"column_start":40,"column_end":54},"alias_span":null,"name":"PropertyValues","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":50},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,99,100,45,117,116,105,108,45,48,46,49,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":901,"byte_end":924,"line_start":27,"line_end":27,"column_start":5,"column_end":28},"alias_span":null,"name":"canonical_property_name","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":56},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,99,100,45,117,116,105,108,45,48,46,49,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":926,"byte_end":941,"line_start":27,"line_end":27,"column_start":30,"column_end":45},"alias_span":null,"name":"property_values","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":58},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,99,100,45,117,116,105,108,45,48,46,49,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":943,"byte_end":967,"line_start":27,"line_end":27,"column_start":47,"column_end":71},"alias_span":null,"name":"canonical_property_value","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,99,100,45,117,116,105,108,45,48,46,49,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":971,"line_start":1,"line_end":28,"column_start":1,"column_end":3},"name":"","qualname":"::","value":"/home/chivier_humber/.cargo/registry/src/github.com-1ecc6299db9ec823/ucd-util-0.1.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":30},{"krate":0,"index":36},{"krate":0,"index":46},{"krate":0,"index":60},{"krate":0,"index":66},{"krate":0,"index":74},{"krate":0,"index":80},{"krate":0,"index":86}],"decl_id":null,"docs":"The `ucd-util` crate contains a smattering of utility functions that implement\nvarious algorithms specified by Unicode. There is no specific goal for\nexhaustiveness. Instead, implementations should be added on an as-needed basis.","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,99,100,45,117,116,105,108,45,48,46,49,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":507,"byte_end":529,"line_start":12,"line_end":12,"column_start":1,"column_end":23}}]},{"kind":"Const","id":{"krate":0,"index":10},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,99,100,45,117,116,105,108,45,48,46,49,46,51,47,115,114,99,47,104,97,110,103,117,108,46,114,115],"byte_start":1275,"byte_end":1296,"line_start":10,"line_end":10,"column_start":11,"column_end":32},"name":"RANGE_HANGUL_SYLLABLE","qualname":"::hangul::RANGE_HANGUL_SYLLABLE","value":"&'static [(u32, u32)]","parent":null,"children":[],"decl_id":null,"docs":" A set of ranges that corresponds to the set of all Hangul syllable\n codepoints.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":24},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,99,100,45,117,116,105,108,45,48,46,49,46,51,47,115,114,99,47,104,97,110,103,117,108,46,114,115],"byte_start":1829,"byte_end":1840,"line_start":27,"line_end":27,"column_start":8,"column_end":19},"name":"hangul_name","qualname":"::hangul::hangul_name","value":"fn (cp: u32) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Return the character name of the given precomposed Hangul codepoint.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":26},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,99,100,45,117,116,105,108,45,48,46,49,46,51,47,115,114,99,47,104,97,110,103,117,108,46,114,115],"byte_start":2684,"byte_end":2719,"line_start":50,"line_end":50,"column_start":8,"column_end":43},"name":"hangul_full_canonical_decomposition","qualname":"::hangul::hangul_full_canonical_decomposition","value":"fn (cp: u32) -> Option<(u32, u32, Option<u32>)>","parent":null,"children":[],"decl_id":null,"docs":" Return the full canonical decomposition of the given precomposed Hangul\n codepoint.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":32},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,99,100,45,117,116,105,108,45,48,46,49,46,51,47,115,114,99,47,105,100,101,111,103,114,97,112,104,46,114,115],"byte_start":4102,"byte_end":4117,"line_start":4,"line_end":4,"column_start":11,"column_end":26},"name":"RANGE_IDEOGRAPH","qualname":"::ideograph::RANGE_IDEOGRAPH","value":"&'static [(u32, u32)]","parent":null,"children":[],"decl_id":null,"docs":" A set of ranges that corresponds to the set of all ideograph codepoints.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":34},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,99,100,45,117,116,105,108,45,48,46,49,46,51,47,115,114,99,47,105,100,101,111,103,114,97,112,104,46,114,115],"byte_start":4966,"byte_end":4980,"line_start":38,"line_end":38,"column_start":8,"column_end":22},"name":"ideograph_name","qualname":"::ideograph::ideograph_name","value":"fn (cp: u32) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Return the character name of the given ideograph codepoint.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":38},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,99,100,45,117,116,105,108,45,48,46,49,46,51,47,115,114,99,47,110,97,109,101,46,114,115],"byte_start":6356,"byte_end":6380,"line_start":4,"line_end":4,"column_start":8,"column_end":32},"name":"character_name_normalize","qualname":"::name::character_name_normalize","value":"fn (string: &mut String) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Normalize the given character name in place according to UAX44-LM2.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":42},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,99,100,45,117,116,105,108,45,48,46,49,46,51,47,115,114,99,47,110,97,109,101,46,114,115],"byte_start":9175,"byte_end":9198,"line_start":72,"line_end":72,"column_start":8,"column_end":31},"name":"symbolic_name_normalize","qualname":"::name::symbolic_name_normalize","value":"fn (string: &mut String) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Normalize the given symbolic name in place according to UAX44-LM3.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":48},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,99,100,45,117,116,105,108,45,48,46,49,46,51,47,115,114,99,47,112,114,111,112,101,114,116,121,46,114,115],"byte_start":13717,"byte_end":13730,"line_start":6,"line_end":6,"column_start":10,"column_end":23},"name":"PropertyTable","qualname":"::property::PropertyTable","value":"&'static [(&'static str, &'static str)]","parent":null,"children":[],"decl_id":null,"docs":" The type of a property name table.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":50},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,99,100,45,117,116,105,108,45,48,46,49,46,51,47,115,114,99,47,112,114,111,112,101,114,116,121,46,114,115],"byte_start":14062,"byte_end":14085,"line_start":14,"line_end":14,"column_start":8,"column_end":31},"name":"canonical_property_name","qualname":"::property::canonical_property_name","value":"fn (property_table: PropertyTable, normalized_property_name: &str) -> Option<&'static str>","parent":null,"children":[],"decl_id":null,"docs":" Find the canonical property name for the given normalized property name.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":52},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,99,100,45,117,116,105,108,45,48,46,49,46,51,47,115,114,99,47,112,114,111,112,101,114,116,121,46,114,115],"byte_start":14992,"byte_end":15010,"line_start":36,"line_end":36,"column_start":10,"column_end":28},"name":"PropertyValueTable","qualname":"::property::PropertyValueTable","value":"&'static [(&'static str, PropertyValues)]","parent":null,"children":[],"decl_id":null,"docs":" Type of a property value table.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":54},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,99,100,45,117,116,105,108,45,48,46,49,46,51,47,115,114,99,47,112,114,111,112,101,114,116,121,46,114,115],"byte_start":15289,"byte_end":15303,"line_start":43,"line_end":43,"column_start":10,"column_end":24},"name":"PropertyValues","qualname":"::property::PropertyValues","value":"&'static [(&'static str, &'static str)]","parent":null,"children":[],"decl_id":null,"docs":" A mapping of property values for a specific property.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":56},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,99,100,45,117,116,105,108,45,48,46,49,46,51,47,115,114,99,47,112,114,111,112,101,114,116,121,46,114,115],"byte_start":15839,"byte_end":15854,"line_start":56,"line_end":56,"column_start":8,"column_end":23},"name":"property_values","qualname":"::property::property_values","value":"fn (property_value_table: PropertyValueTable, canonical_property_name: &str) -> Option<PropertyValues>","parent":null,"children":[],"decl_id":null,"docs":" Find the set of possible property values for a given property.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":58},"span":{"file_name":[47,104,111,109,101,47,99,104,105,118,105,101,114,95,104,117,109,98,101,114,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,99,100,45,117,116,105,108,45,48,46,49,46,51,47,115,114,99,47,112,114,111,112,101,114,116,121,46,114,115],"byte_start":16569,"byte_end":16593,"line_start":76,"line_end":76,"column_start":8,"column_end":32},"name":"canonical_property_value","qualname":"::property::canonical_property_value","value":"fn (property_values: PropertyValues, normalized_property_value: &str) -> Option<&'static str>","parent":null,"children":[],"decl_id":null,"docs":" Find the canonical property value for the given normalized property\n value.","sig":null,"attributes":[]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}